version: "3"
services:
  api-api:
    container_name: api-api
    restart: always
    build: .
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    env_file: .env
    ports:
      - "$SERVER_PORT:$SERVER_PORT"
      - "9229:9229" # debugging port
      - "$SOCKET_PORT:$SOCKET_PORT"
      - "$SOCKET_UDP_RANGE"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      FORCE_COLOR: "true"
      CHOKIDAR_USEPOLLING: "true" # enables hot-reloading on windows host
    links:
      - api-db
    depends_on:
      - api-db
      - api-redis
    networks:
      - api-network
  api-db:
    container_name: api-db
    image: mongo
    restart: always
    command: mongod --port ${MONGO_PORT}
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./docker_scripts/:/docker-entrypoint-initdb.d
    ports:
      - "$MONGO_PORT:$MONGO_PORT"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - api-network
  api-redis:
    container_name: api-redis
    restart: always
    image: redis:latest
    ports:
      - "$REDIS_PORT:$REDIS_PORT"
    expose:
      - "$REDIS_PORT"
    env_file: .env
    volumes:
      - ./config/redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf", "--port", "${REDIS_PORT}"]
    networks:
      - api-network

  redis-commander:
    container_name: redis-commander
    restart: always
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: "redis:api-redis:6380"
    networks:
      - api-network

networks:
  api-network:
    external: true
